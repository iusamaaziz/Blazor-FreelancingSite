@inject CategoryServices catService
<h3 class="my-2">Manage Categories</h3>
<hr />
<a @onclick="@((_)=> { show = true; })" class="btn btn-primary my-2">Add Category</a>
<CategoryForm show="@show" click="@((_)=> { show = false; })" category="@cat"  onsubmit="@(async (category)=> { await AddCategory(category); })"></CategoryForm>
<div class="row">
    @foreach (Category cat in categories)
    {
        <CategoryCard category="@cat" isAdmin="@true" UpdateEvent="@((c) => { UpdateBtnClick(c); })" DeleteEvent="DeleteCategory"></CategoryCard>
    }
</div>
@code{
    bool show=false;
    List<Category> categories = new List<Category>();
    Category cat = new Category();
    public async Task AddCategory(Category category)
    {
        if (category.ID == 0)
        {
            Category received = await catService.addCategory(category);
            categories.Add(new Category { ID = received.ID, Slug = received.Slug, Image = received.Image, ImageUrl = received.ImageUrl, Name = received.Name });
        }
        else
        {
            Category received = await catService.updateCategory(category);
            for(int i = 0;i<categories.Count; i++)
            {
                if(categories[i].ID == received.ID)
                {
                    categories[i] = new Category { Name = received.Name, ImageUrl = received.ImageUrl, Slug = received.Slug, ID = received.ID };
                    break;
                }
            }
        }
        cat = new Category();
        show = false;
    }
    public async Task DeleteCategory(Category category)
    {
        await catService.deleteCategory(category);
        categories.Remove(category);
    }
    public void UpdateBtnClick(Category category)
    {
        show = true;
        cat = new Category { Name = category.Name, ImageUrl = category.ImageUrl, Slug = category.Slug, ID = category.ID };
    }
    protected async override Task OnInitializedAsync()
    {
        categories = await catService.getAllCategories();
        await base.OnInitializedAsync();
    }
}